#sql索引

#二叉树
#平衡树
#使用b+树（平衡树升级版）
    #分支节点不存储数据，让树的高度尽量矮，让查询数据的效率尽量稳定
#聚集索引
    #innodb必有且只有innodb有
    #innodb的聚集索引是主键
#非聚集索引
    #innodb
    #myisam
#两种索引都采用b+树存放数据，字符串也可创造索引，字符串转asc码
#primary key 是聚集索引
#unique是辅助索引



#查询的条件字段不是索引字段，对哪一个字段创建索引，就用这个字段查询
#在创建索引时应该对区分度比较大的列进行创建（1/10重复率以下适合创建索引）
#范围大不适合使用索引
#条件列参与计算的不会快/使用函数的也会变慢
#模糊匹配/从左到右 like'a%'快 like '%a'慢
#and和or
    #and快速命中索引
    #or容易不命中索引

#联合索引
    #最左前缀命中原则
        #(id,name,email) 查询里只有带id的才能命中索引
        #不能出现范围，出现失效
/*
注意事项：
- 避免使用select *
- 使用count(*)
- 创建表时尽量使用 char 代替 varchar
- 表的字段顺序固定长度的字段优先
- 组合索引代替多个单列索引（由于mysql中每次只能使用一个索引，所以经常使用多个条件查询时更适合使用组合索引）
- 尽量使用短索引
- 使用连接（JOIN）来代替子查询(Sub-Queries)
- 连表时注意条件类型需一致
- 索引散列值（重复少）不适合建索引，例：性别不适合
*/
